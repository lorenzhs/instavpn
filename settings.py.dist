# Configure your DigitalOcean API secrets here
# Get a key at https://cloud.digitalocean.com/api_access
API_KEY = '123abc'  # change this to your API key
CLIENT_ID = '456def'  # put your Client ID here

# SSH key IDs to preinstall on your droplet
# If you don't know them, you can query them from the API in your browser:
# https://api.digitalocean.com/ssh_keys/?client_id=[client_id]&api_key=[api_key]
# You'll see something like this:
# {"status":"OK","ssh_keys":[{"id":123,"name":"foobar"}]}
# Copy the IDs of the keys you want to use here.
# This will be used to log into your droplet without you having to copy the
# password from a DigitalOcean email
SSH_KEY_IDS = ['123']


##
## sshuttle defaults
##

# Proxy DNS query through the VPN
PROXY_DNS = False
# Subnet mask to forward. 0/0 is short for 0.0.0.0/0, aka everything
SUBNET = '0/0'
# Any additional parameters you want to pass to sshuttle
ADDITIONAL_ARGS = ''


##
## Droplet destruction
##

# Set up a droplet self-destruction mechanism
# Droplet will still be destroyed if you initiate disconnection by pressing
# Ctrl+C on the command line
SELF_DESTRUCT = True
# Timout for self-destruction
SELF_DESTRUCT_TIMEOUT = 1200
# Scrub data (TRIM over the storage space, costs you some extra 10mins in
# billed time). Not needed, because no private information is stored on the
# droplet
SCRUB = False
# Remove droplet ssh host key from ~/.ssh/known_hosts after droplet destruction
# DigitalOcean often gives us the same IP again, so this prevents ssh host key
# mismatches from preventing sshuttle from connecting.
REMOVE_FROM_HOSTS = True


##
## DigitalOcean droplet creation defaults
##

# Region to create the droplet in
REGION = 'nyc2'
# Droplet name
NAME = 'instavpn'
# Droplet size
SIZE = '512mb'
# Droplet OS image
IMAGE = 'debian-7-0-x64'

# How often to retry polling for Droplet creation status before giving up
# Initial 20s waiting time, then up to MAX_RETRIES tries every 5s
MAX_RETRIES = 15
